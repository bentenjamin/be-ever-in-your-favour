use criterion::{criterion_group, criterion_main, BenchmarkId, Criterion};
use oxidised_odds::odd::odd;

pub fn criterion_benchmark(c: &mut Criterion) {
    let sample = "86,86,37,37,1,1,74,74,59,59,11,11,65,65,71,71,56,56,13,13,62,62,4,4,97,97,30,30,99,99,99,99,66,66,15,15,52,52,18,18,10,10,46,46,54,54,69,69,44,44,48,48,27,27,39,39,54,54,70,70,11,11,30,30,25,25,85,85,88,88,87,87,45,45,28,28,37,37,23,23,24,24,50,50,18,18,99,99,71,71,62,62,78,78,75,75,78,78,41,41,19,19,7,7,31,31,9,9,84,84,50,50,27,27,49,49,21,21,12,12,4,4,21,21,7,7,40,40,18,18,93,93,62,62,86,86,93,93,14,14,29,29,37,37,12,12,84,84,85,85,67,67,27,27,15,15,23,23,62,62,56,56,40,40,77,77,90,90,13,13,13,13,77,77,47,47,68,68,48,48,28,28,80,80,63,63,49,49,77,77,81,81,8,8,61,61,86,86,95,95,26,26,91,91,58,58,82,82,5,5,65,65,25,25,23,23,15,15,47,47,16,16,28,28,2,2,41,41,77,77,34,34,23,23,69,69,12,12,34,34,17,17,10,10,35,35,92,92,62,62,89,89,19,19,48,48,10,10,15,15,65,65,70,70,49,49,20,20,54,54,7,7,52,52,60,60,99,99,48,48,65,65,33,33,8,8,20,20,42,42,44,44,41,41,42,42,25,25,96,96,12,12,41,41,90,90,45,45,6,6,15,15,71,71,31,31,9,9,81,81,28,28,37,37,36,36,15,15,21,21,39,39,2,2,64,64,83,83,82,82,85,85,66,66,56,56,8,8,18,18,49,49,65,65,36,36,54,54,1,1,80,80,82,82,48,48,14,14,11,11,84,84,28,28,52,52,48,48,98,98,15,15,55,55,46,46,71,71,50,50,13,13,93,93,53,53,33,33,38,38,25,25,40,40,29,29,95,95,46,46,39,39,53,53,98,98,88,88,58,58,89,89,18,18,69,69,45,45,6,6,68,68,52,52,9,9,63,63,78,78,60,60,35,35,77,77,96,96,34,34,99,99,25,25,92,92,10,10,82,82,72,72,50,50,2,2,35,35,20,20,26,26,91,91,50,50,99,99,34,34,97,97,83,83,53,53,83,83,94,94,39,39,52,52,8,8,80,80,68,68,16,16,29,29,46,46,83,83,16,16,21,21,12,12,8,8,39,39,84,84,89,89,59,59,88,88,22,22,49,49,31,31,18,18,91,91,51,51,36,36,96,96,44,44,74,74,56,56,72,72,25,25,66,66,37,37,64,64,81,81,84,84,33,33,33,33,54,54,82,82,25,25,35,35,4,4,86,86,32,32,92,92,79,79,14,14,2,2,45,45,16,16,19,19,82,82,24,24,42,42,24,24,14,14,11,11,97,97,92,92,24,24,51,51,52,52,58,58,23,23,93,93,15,15,44,44,77,77,60,60,28,28,89,89,11,11,71,71,46,46,98,98,51,51,70,70,26,26,98,98,25,25,33,33,70,70,96,96,20,20,79,79,28,28,88,88,26,26,9,9,83,83,48,48,77,77,98,98,62,62,33,33,47,47,39,39,66,66,72,72,55,55,57,57,33,33,75,75,5,5,46,46,32,32,97,97,38,38,71,71,40,40,65,65,3,3,62,62,24,24,66,66,80,80,56,56,23,23,41,41,99,99,41,41,79,79,36,36,42,42,8,8,64,64,74,74,89,89,77,77,16,16,34,34,55,55,46,46,42,42,25,25,38,38,39,39,2,2,15,15,68,68,93,93,98,98,96,96,12,12,53,53,13,13,7,7,29,29,78,78,61,61,49,49,55,55,27,27,24,24,99,99,59,59,29,29,67,67,35,35,54,54,85,85,34,34,52,52,66,66,26,26,27,27,4,4,28,28,83,83,98,98,58,58,99,99,6,6,97,97,61,61,81,81,72,72,73,73,43,43,17,17,18,18,66,66,36,36,28,28,12,12,96,96,49,49,6,6,20,20,48,48,40,40,36,36,67,67,40,40,30,30,99,99,84,84,44,44,52,52,9,9,65,65,68,68,72,72,66,66,89,89,12,12,28,28,9,9,38,38,72,72,93,93,61,61,68,68,33,33,26,26,83,83,42,42,1,1,86,86,36,36,97,97,21,21,86,86,68,68,86,86,98,98,9,9,40,40,25,25,21,21,3,3,58,58,6,6,80,80,36,36,79,79,29,29,11,11,44,44,29,29,3,3,0,0,88,88,3,3,6,6,22,22,93,93,9,9,99,99,92,92,52,52,8,8,38,38,47,47,98,98,34,34,1,1,39,39,58,58,55,55,34,34,36,36,71,71,15,15,84,84,96,96,35,35,62,62,12,12,11,11,73,73,54,54,36,36,6,6,93,93,22,22,10,10,78,78,99,99,91,91,59,59,43,43,16,16,69,69,16,16,40,40,81,81,90,90,2,2,17,17,98,98,91,91,77,77,75,75,53,53,9,9,73,73,23,23,41,41,6,6,10,10,26,26,43,43,89,89,59,59,78,78,70,70,11,11,85,85,91,91,38,38,73,73,51,51,26,26,90,90,26,26,3,3,33,33,73,73,98,98,80,80,7,7,29,29,62,62,9,9,7,7,49,49,94,94,76,76,59,59,22,22,37,37,94,94,82,82,20,20,47,47,25,25,47,47,32,32,28,28,39,39,96,96,98,98,58,58,83,83,41,41,4,4,7,7,72,72,14,14,25,25,63,63,74,74,89,89,72,72,22,22,69,69,27,27,10,10,86,86,59,59,30,30,98,98,63,63,57,57,11,11,31,31,60,60,62,62,24,24,92,92,99,99,73,73,98,98,72,72,75,75,52,52,4,4,0,0,59,59,67,67,91,91,71,71,72,72,77,77,19,19,16,16,32,32,20,20,19,19,78,78,89,89,17,17,54,54,7,7,19,19,12,12,28,28,18,18,65,65,94,94,34,34,71,71,6,6,63,63,58,58,2,2,62,62,14,14,95,95,52,52,97,97,29,29,55,55,86,86,91,91,98,98,41,41,5,5,13,13,30,30,74,74,38,38,25,25,50,50,82,82,28,28,84,84,54,54,56,56,2,2,30,30,78,78,46,46,56,56,28,28,33,33,100,100,89,89,39,39,2,2,27,27,39,39,14,14,13,13,61,61,69,69,10,10,57,57,40,40,62,62,4,4,48,48,57,57,83,83,57,57,11,11,45,45,80,80,27,27,75,75,35,35,69,69,34,34,34,34,75,75,64,64,48,48,92,92,60,60,15,15,94,94,63,63,61,61,60,60,90,90,26,26,5,5,79,79,16,16,36,36,1,1,54,54,56,56,26,26,86,86,62,62,24,24,19,19,69,69,98,98,86,86,77,77,54,54,6,6,26,26,12,12,65,65,87,87,90,90,25,25,68,68,87,87,88,88,32,32,57,57,44,44,48,48,89,89,15,15,93,93,61,61,16,16,78,78,63,63,51,51,77,77,27,27,89,89,99,99,50,50,5,5,95,95,91,91,67,67,11,11,94,94,44,44,7,7,31,31,76,76,89,89,24,24,16,16,63,63,63,63,24,24,98,98,64,64,52,52,53,53,73,73,82,82,100,100,36,36,40,40,76,76,46,46,37,37,27,27,23,23,53,53,10,10,82,82,48,48,40,40,75,75,73,73,34,34,2,2,17,17,21,21,7,7,93,93,72,72,26,26,72,72,15,15,64,64,8,8,70,70,12,12,5,5,86,86,65,65,3,3,12,12,15,15,61,61,95,95,58,58,17,17,71,71,60,60,55,55,83,83,92,92,84,84,33,33,79,79,5,5,60,60,97,97,40,40,90,90,69,69,54,54,74,74,29,29,75,75,75,75,58,58,62,62,2,2,15,15,68,68,92,92,38,38,78,78,66,66,82,82,86,86,29,29,62,62,64,64,82,82,15,15,83,83,38,38,17,17,68,68,91,91,85,85,13,13,26,26,67,67,93,93,16,16,79,79,5,5,79,79,16,16,11,11,34,34,12,12,11,11,50,50,36,36,27,27,68,68,67,67,19,19,92,92,41,41,1,1,46,46,44,44,76,76,96,96,20,20,8,8,85,85,8,8,25,25,31,31,75,75,98,98,8,8,18,18,58,58,39,39,95,95,86,86,27,27,79,79,33,33,35,35,84,84,52,52,93,93,23,23,14,14,94,94,70,70,61,61,12,12,38,38,47,47,69,69,75,75,5,5,16,16,25,25,25,25,32,32,67,67,95,95,78,78,6,6,51,51,8,8,32,32,29,29,2,2,98,98,69,69,48,48,8,8,76,76,16,16,32,32,4,4,94,94,42,42,49,49,94,94,2,2,95,95,29,29,98,98,10,10,22,22,30,30,99,99,53,53,39,39,43,43,21,21,26,26,31,31,51,51,40,40,19,19,74,74,43,43,80,80,37,37,27,27,71,71,17,17,86,86,87,87,29,29,95,95,50,50,9,9,75,75,27,27,25,25,1,49,49,15,15,27,27,6,6,45,45,39,39,4,4,19,19,59,59,69,69,94,94,30,30,53,53,49,49,59,59";

    let mut group = c.benchmark_group("odds");

    group.bench_with_input(
        BenchmarkId::new("get_odds", "1000 ints 1 as odd"), &sample,
        |b, &i| b.iter(|| {
            odd::get_odd(i.to_string())
        })
    );
    group.bench_with_input(
        BenchmarkId::new("count_odds", "1000 ints 1 as odd"), &sample,
        |b, &i| b.iter(|| {
            odd::counts_odd(i.to_string())
        }),
    );
    group.bench_with_input(
        BenchmarkId::new("group_odds", "1000 ints 1 as odd"), &sample,
        |b, &i| b.iter(|| {
            odd::group_odd(i.to_string())
        }),
    );
    group.bench_with_input(
        BenchmarkId::new("fold_odds", "1000 ints 1 as odd"), &sample,
        |b, &i| b.iter(|| {
            odd::fold_odd(i.to_string())
        }),
    );
    group.bench_with_input(
        BenchmarkId::new("dedup_odds", "1000 ints 1 as odd"), &sample,
        |b, &i| b.iter(|| {
            odd::dedup_odd(i.to_string())
        }),
    );
    group.bench_with_input(
        BenchmarkId::new("get_fold_odds", "1000 ints 1 as odd"), &sample,
        |b, &i| b.iter(|| {
            odd::get_fold_odd(i.to_string())
        }),
    );

    group.finish();
}

criterion_group!(benches, criterion_benchmark);
criterion_main!(benches);